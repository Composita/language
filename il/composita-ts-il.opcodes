OperatorCode ::=
  % Basic Math Ops                                    % stack: top : ValueTypes , ..., bottom : ValueTypes
  Add                                   =  0          % op, right-value : Addable, left-value : Addable
  Subtract                              =  1          % op, right-value : Number, left-value : Number
  Multiply                              =  2          % op, right-value : Number, left-value : Number
  Divide                                =  3          % op, right-value : Number, left-value : Number
  Negate                                =  4          % op, value : Number
  Modulo                                =  5          % op, right-value : Number, left-value : Number

  % Compare Ops  
  Equal                                 =  6          % op, right-value : Equatable, left-value : Equatable
  Less                                  =  7          % op, right-value : Comparable, left-value : Comparable
  LessEqual                             =  8          % op, right-value : Comparable, left-value : Comparable
  Greater                               =  9          % op, right-value : Comparable, left-value : Comparable
  GreaterEqual                          = 10          % op, right-value : Comparable, left-value : Comparable
  NotEqual                              = 11          % op, right-value : Equatable, left-value : Equatable

  % Unary invert  
  Not                                   = 12          % op, value : Boolean

  % Logic binary ops  
  LogicOr                               = 13          % op, right-value : Boolean, left-value : Boolean
  LogicAnd                              = 14          % op, right-value : Boolean, left-value : Boolean

  % new component  
  New                                   = 15          % op { TypeDescriptor }, target: Variable, [ MatrixDimensions: Integer ]
  Delete                                = 16          % op, value : Component

  ClientSend                            = 17          % op { MessageDescriptor }, target: Service, [ MessageArgument : Any ]
  ClientReceive                         = 18          % op { MessageDescriptor }, receiver: Service, [ TargetVariables: Any ]
  ServerSend                            = 19          % op { MessageDescriptor }, [ MessageArgument : Any ]
  ServerReceive                         = 20          % op { MessageDescriptor }, [ TargetVariables: Any ]
  Connect                               = 21          % op, right-offered-service: Service, left-required-service: Service | Component                % 7.3.1
                                                      % op, right-offered-sub-service: Service, left-offered-redirect-service: Service | Component    % 7.3.2
                                                      % op, right-required-redirect-service: Service, left-required-sub-service: Service              % 7.3.3
  Disconnect,                           = 22          % op, target: Service
  ClientReceiveTest                     = 23          % op { MessageDescriptor }, receiver: Service, [ TargetVariables: Any ]
  ServerReceiveTest                     = 24          % op { MessageDescriptor }, [ TargetVariables: Any ]
  ClientInputTest                       = 25          % op { MessageDescriptor }, receiver: Service, [ TargetVariables: Any ]
  ServerInputTest                       = 26          % op { MessageDescriptor }, [ TargetVariables: Any ]
  SystemCall                            = 27          % op { SystemCallDescriptor }, [ Parameters: Parameter ]
  ProcedureCall                         = 28          % op { ProcedureDescriptor }, [ Parameters : Parameter ]
  Return                                = 29          % op

  % Load constants  
  LoadConstantBoolean                   = 30          % op { BooleanDescriptor }
  LoadConstantText                      = 31          % op { TextDescriptor }
  LoadConstantCharacter                 = 32          % op { CharacterDescriptor }
  LoadConstantFloat                     = 33          % op { FloatDescriptor }
  LoadConstantInteger                   = 34          % op { IntegerDescriptor }

  Move                                  = 35          % op, right-target: Component, left-source: Component

  StoreVariable                         = 36          % op, right-value: Value, left-target: Variable
  LoadVariable                          = 37          % op { VariableDescriptor }, [ Index: BuiltIn ]
  LoadService                           = 38          % op { InterfaceDescriptor }, 

  % Concurrency  
  Await                                 = 39          % op
  AcquireShared                         = 40          % op
  ReleaseShared                         = 41          % op
  AcquireExclusive                      = 42          % op
  ReleaseExclusive                      = 43          % op

  Branch                                = 44          % op { JumpDescriptor }
  BranchTrue                            = 45          % op { JumpDescriptor }, value : Boolean
  BranchFalse                           = 46          % op { JumpDescriptor }, value : Boolean

  IsType                                = 47          % op, right-type: ComponentDescriptor, left-value: Variable       % verify that this is only for variables
  ExistsTest                            = 48          % op, value: Variable                                             % same here
  